name: BIPOLAR CI

on: [push, pull_request]

jobs:
  lint:
    name: ubuntu-clang-9
    runs-on: ubuntu-latest
    container: archlinuxrolling/llvm:latest

    steps:
      - uses: actions/checkout@v1

      - name: System information
        run: |
          uname -a
          clang --version

      - name: Installing bazel
        run: |
          pacman -Sy bazel git --noconfirm
          bazel --version

      - name: Building
        run: CC=clang bazel build //...

  build:
    name: ubuntu-gcc-9
    runs-on: ubuntu-latest

    container:
      image: gcc:9
      options: --security-opt seccomp=unconfined

    steps:
      - uses: actions/checkout@v1

      - name: System information
        run: |
          uname -a
          gcc --version

      - name: Installing bazel
        run: |
          bazel_version=2.0.0
          curl -OL https://github.com/bazelbuild/bazel/releases/download/${bazel_version}/bazel-${bazel_version}-installer-linux-x86_64.sh
          chmod +x bazel-${bazel_version}-installer-linux-x86_64.sh
          ./bazel-${bazel_version}-installer-linux-x86_64.sh
          rm ./bazel-${bazel_version}-installer-linux-x86_64.sh
          bazel --version

      - name: Installing packages
        run: |
          apt update
          apt install -y binutils-dev libcurl4-openssl-dev zlib1g-dev libdw-dev libiberty-dev cmake

      - name: Caching kcov binary files
        id: kcov-cache
        uses: actions/cache@v1
        with:
          path: kcov
          key: kcov-installed

      - name: Building kcov binary files
        if: steps.kcov-cache.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/SimonKagstrom/kcov
          (cd kcov; cmake -H. -Bbuild -DCMAKE_BUILD_TYPE=Release; cmake --build build)

      - name: Deploying kcov binary files
        run: (cd kcov; cd build; make install)

      - name: Building
        run: bazel build //...

      - name: Testing
        run: bazel test //... --test_tag_filters='-io_uring,-benchmark,-example' --test_output=errors

      - name: Testing with code coverage reports
        run: bazel test --config=kcov //... --test_tag_filters='-io_uring,-benchmark,-example'

      - uses: codecov/codecov-action@v1.0.3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          flags: unittests
